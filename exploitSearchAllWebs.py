#!/usr/bin/python
#-*-coding:utf-8-*-
#- exploit-finder Class

#- Copyright (C) 2015 GoldraK & Roger Serentill
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License 
# as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty 
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. 
# You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>


"""Exploit finder"""

__author__ 		= "GoldraK & Roger Serentill & Carlos A. Molina"
__credits__ 	= "GoldraK & Roger Serentill & Carlos A. Molina"
__version__ 	= "0.1.1"
__maintainer__ 	= "GoldraK & Roger Serentill & Carlos A. Molina"
__email__ 		= "goldrak@gmail.com, hello@rogerserentill.com, carlosantmolina@gmail.com"
__status__ 		= "Development"

from teco import color, style
from exploitSearch0today import ExploitSearch0today
from exploitSearchDB import ExploitSearchExploitDB
import sys
sys.path.append('exploits')

class ExploitSearchAllWebs():

	def __init__(self):
		self.save_path = 'modules/exploit-finder/exploits'  # where save files
		self.exploit0today = ExploitSearch0today()
		self.exploitDB = ExploitSearchExploitDB()

	def ask4updateExploitDB(self):
		print ('Would you like to update exploit-db database before [y/n]?')
		updateDB = ''
		while updateDB == '':
			updateDB = raw_input(">> ")
			if updateDB == 'y':
				return 1
			elif updateDB == 'n':
				return 0
			else:
				updateDB = ''

	def askExploitID(self, exploitsIDdb_list, exploitsID0today_list=None):
		download_exploit_id = ""
		while download_exploit_id == "":
			download_exploit_id = raw_input('Type the ID of explot: ')
			if download_exploit_id in exploitsIDdb_list:
				exploitInDB = 1
			else:
				exploitInDB = 0
			if exploitsID0today_list != None:
				if download_exploit_id in exploitsID0today_list:
					exploitIn0today = 1
				else:
					exploitIn0today = 0
				if exploitInDB == 1 and exploitIn0today == 1:
					print color('rojo', 'Same ID in both webs. Please, download it using only one web')
					return -1,-1
				elif exploitIn0today == 1:
					return download_exploit_id, '0today'
			if exploitInDB == 1:
				return download_exploit_id, 'db'

	def exploitSearchAndDownload(self, portInfo=None, possibilities=None):
		if self.ask4updateExploitDB() == 1:
			self.exploitDB.update_database()
		newSearch = self.exploitDB.ask4exploit(portInfo)
		print "Searching '" + newSearch + "'"
		exploitsIDdb_list = self.exploitDB.searchExploit(newSearch)
		if possibilities['0today'] == True:
			br, contents, exploitsInfo, new_search, exploitsID0today_list = self.exploit0today.exploit0toadySearch(newSearch)
			if exploitsIDdb_list != [] and exploitsID0today_list!=[] and self.exploitDB.askDownloadExploit() == 'y':
				download_exploit_id, webWithExploit = self.askExploitID(exploitsIDdb_list, exploitsID0today_list)
				if download_exploit_id != -1:
					if webWithExploit == 'db':
						self.exploitDB.downloadStart(download_exploit_id)
					elif webWithExploit == '0today':
						self.exploit0today.downloadStart(br, download_exploit_id)
		elif exploitsIDdb_list != [] and self.exploitDB.askDownloadExploit() == 'y':
			download_exploit_id, webWithExploit = self.askExploitID(exploitsIDdb_list)
			if download_exploit_id != -1:
				self.exploitDB.downloadStart(download_exploit_id)
