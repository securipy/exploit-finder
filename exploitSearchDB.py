#!/usr/bin/python
#-*-coding:utf-8-*-
#- exploit-finder Class

#- Copyright (C) 2015 GoldraK & Roger Serentill
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License 
# as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty 
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. 
# You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>


"""Exploit finder"""

__author__ 		= "GoldraK & Roger Serentill & Carlos A. Molina"
__credits__ 	= "GoldraK & Roger Serentill & Carlos A. Molina"
__version__ 	= "0.1.1"
__maintainer__ 	= "GoldraK & Roger Serentill & Carlos A. Molina"
__email__ 		= "goldrak@gmail.com, hello@rogerserentill.com, carlosantmolina@gmail.com"
__status__ 		= "Development"

from teco import color, style
import csv,urllib

class ExploitSearchExploitDB():

	def __init__(self):
		self.exploits = {}

	def update_database(self):
		print color('cyan' , 'Downloading Database')
		url = 'https://raw.githubusercontent.com/offensive-security/exploit-database/master/files.csv'
		urllib.urlretrieve(url, "modules/exploit-finder/files.csv")

	def search(self, portInfo=None):
		if portInfo == None:
			new_search = ""
			while new_search == "":
				new_search = raw_input('Find exploit: ')
		else:
			new_search = portInfo
		print "Searching '" + new_search + "'"
		dic_search = new_search.split(" ")		
		exist_exploit = False
		with open('modules/exploit-finder/files.csv') as csvfile:
			reader = csv.DictReader(csvfile)
			for row in reader:
				flag = True
				for x in dic_search:
					if x.lower() not in row['description'].lower():
						flag = False
						break
				if flag:
					exist_exploit = True
					self.exploits.update({row['id']:row['file']})
					print row['description']+" --> "+ color('azul','https://www.exploit-db.com/exploits/'+str(row['id'])+'/')+" - "+color('rojo','ID: '+str(row['id']))
			if exist_exploit == False:
				print color('rojo', "No searches for '" + new_search + "' \n")

		if exist_exploit:
			self.download_exploit()

	def download_exploit(self):
		download_exploit = ""
		while download_exploit == "":
			download_exploit = raw_input('Download exploit y/n?: ')
		if download_exploit == 'y':
			download_exploit_id = ""
			while download_exploit_id == "":
				download_exploit_id = raw_input('Type the id of explot: ')
				if download_exploit_id in self.exploits.keys():
					file_name = self.exploits[download_exploit_id].split("/")[-1]
					print color('cyan' , 'Downloading exploit')
					url = 'https://raw.githubusercontent.com/offensive-security/exploit-database/master/'+self.exploits[download_exploit_id]
					urllib.urlretrieve(url, "modules/exploit-finder/exploits/"+file_name)
				else:
					print color('rojo','\nInvalid Exploit Id\n')
					download_exploit_id = ""
		elif download_exploit != 'n':
			print color('rojo','\nInvalid Option\n')
			self.download_exploit()